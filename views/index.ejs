<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #0072ff;
            --secondary: #f5f9ff;
            --text-light: #333;
            --text-dark: #fff;
            --shadow: 0 8px 24px rgba(0, 114, 255, 0.15);
            --card-bg: rgba(255, 255, 255, 0.8);
            --accent: #00b0ff;
        }

        .dark-mode {
            --primary: #00b0ff;
            --secondary: #0a1929;
            --text-light: #e0e0ff;
            --card-bg: rgba(16, 28, 48, 0.8);
            --accent: #4dc0ff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', system-ui, sans-serif;
        }

        body {
            background: var(--secondary);
            color: var(--text-light);
            transition: all 0.4s ease;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        /* Header Styles */
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
            margin-bottom: 2rem;
        }

        .location {
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .theme-toggle {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.5rem;
            color: var(--primary);
        }

        /* Current Weather Section */
        .current-weather {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            background: var(--card-bg);
            backdrop-filter: blur(8px);
            border-radius: 18px;
            padding: 2rem;
            box-shadow: var(--shadow);
            margin-bottom: 2rem;
        }

        .temperature {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .temp-value {
            font-size: 6rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            color: var(--primary);
        }

        .condition-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
        }

        .weather-details {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .condition {
            font-size: 1.8rem;
            margin-bottom: 1rem;
        }

        .additional-info {
            display: flex;
            gap: 1.5rem;
            font-size: 1.1rem;
        }

        /* Weather Metrics Grid */
        .weather-metrics {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .metric-card {
            background: var(--card-bg);
            backdrop-filter: blur(8px);
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: var(--shadow);
            transition: transform 0.3s ease;
        }

        .metric-card:hover {
            transform: translateY(-5px);
        }

        .metric-icon {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: var(--primary);
        }

        .metric-label {
            font-size: 0.9rem;
            color: var(--text-light);
            margin-bottom: 0.5rem;
        }

        .metric-value {
            font-size: 1.5rem;
            font-weight: 600;
        }

        /* Forecast Carousel */
        .forecast {
            margin-bottom: 2rem;
        }

        .forecast-title {
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .forecast-carousel {
            display: flex;
            overflow-x: auto;
            gap: 1rem;
            padding-bottom: 1rem;
            scrollbar-width: thin;
            scrollbar-color: var(--primary) transparent;
        }

        .forecast-day {
            min-width: 120px;
            background: var(--card-bg);
            backdrop-filter: blur(8px);
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: var(--shadow);
            flex-shrink: 0;
        }

        .day-name {
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .day-icon {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: var(--primary);
        }

        .day-temp {
            font-size: 1.2rem;
            font-weight: 600;
        }

        /* Search Button */
        .search-button {
            display: block;
            margin: 0 auto;
            background: linear-gradient(to right, var(--primary), var(--accent));
            color: white;
            border: none;
            border-radius: 32px;
            padding: 0.8rem 2rem;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 4px 12px rgba(0, 114, 255, 0.3);
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .search-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 16px rgba(0, 114, 255, 0.4);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .current-weather {
                grid-template-columns: 1fr;
            }

            .temp-value {
                font-size: 4.5rem;
            }

            .condition-icon {
                font-size: 3rem;
            }

            .additional-info {
                flex-direction: column;
                gap: 0.75rem;
            }
        }

        @media (max-width: 480px) {
            .container {
                padding: 1rem;
            }

            .current-weather {
                padding: 1.5rem;
            }

            .temp-value {
                font-size: 3.5rem;
            }

            .condition-icon {
                font-size: 2.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="location">
                <span>üåç</span>
                <span>Gilgit</span>
            </div>
            <button class="theme-toggle" id="themeToggle">üåô</button>
        </header>

        <section class="current-weather">
            <div class="temperature">
                <div class="temp-value"><%= temp %>¬∞C</div>
                <div class="condition-icon"><img src="<%= icon %>" alt=""></div>
            </div>
        </section>

        <div class="weather-metrics">
            <div class="metric-card">
                <div class="metric-icon">üå°Ô∏è</div>
                <div class="metric-label">Feels Like</div>
                <div class="metric-value"><%= feelslike %>¬∞C</div>
            </div>
            <div class="metric-card">
                <div class="metric-icon">üëÅÔ∏è</div>
                <div class="metric-label">Visibility</div>
                <div class="metric-value"><%= visibility %> km</div>
            </div>
            <div class="metric-card">
                <div class="metric-icon">üíß</div>
                <div class="metric-label">Humidity</div>
                <div class="metric-value"><%= humidity %>%</div>
            </div>
        </div>

    

        <button class="search-button" onclick="window.location.href='/home'">Search Location</button>
    </div>

    <script>
        // Theme toggle functionality
        const themeToggle = document.getElementById('themeToggle');
        const body = document.body;

        // Check if dark mode is saved in local storage
        if (localStorage.getItem('darkMode') === 'enabled') {
            body.classList.add('dark-mode');
            themeToggle.textContent = '‚òÄÔ∏è';
        }

        themeToggle.addEventListener('click', () => {
            body.classList.toggle('dark-mode');
            
            if (body.classList.contains('dark-mode')) {
                localStorage.setItem('darkMode', 'enabled');
                themeToggle.textContent = '‚òÄÔ∏è';
            } else {
                localStorage.setItem('darkMode', 'disabled');
                themeToggle.textContent = 'üåô';
            }
        });
    </script>
</body>
</html>